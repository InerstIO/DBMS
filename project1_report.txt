1. Basic information
Student ID : 25245625
Student Name : Yu Feng
OS (bit) :
gcc version :


2. Internal Record Format
- Show your record format design and describe how your design satisfies O(1) field access. If not, just mention that you haven't implemented this feature.
- Describe how you store a VarChar field.


3. Page Format
- Show your page format design
Records are appended to the free space offset in the page (in the top part of the page) until there is not enough free space left in that page.
The last byte of the page is used to store the the offset of free space, so that new records can be appended at that offset, let's call it F.
The byte before the last byte is used to store the number of records in that page, let's call it N.
Before that byte, there are N slot directories indicating the offset and length of the records so that we can get the position of the record in O(1) time.
By using F and N, we can easily get the amount of free space in that page = PAGE_SIZE - 2 * sizeof(int) - N * sizeof(SlotDir) - F.


4. Implementation Detail
- Other implementation details goes here.
The way to find a page with enough space is implemented in a way slightly different from the project1-description. 
When the current page doesn't have enough space, instead of checking from the beginning of the file (first page), we check from the last to the first page.
I think last to first is more efficient than first to last, since the first page has been checked for many times, and it's less likely to have enough space, while the last - 1 page is more likely to have enough space.


5. Other (optional)
- Freely use this section to tell us about things that are related to the project 1, but not related to the other sections (optional)

